name: My CV

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-pdf:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Compile LaTeX document
        uses: xu-cheng/latex-action@v3
        with:
          root_file: frontend.tex

      - name: Upload PDF artifact
        uses: actions/upload-artifact@v4
        with:
          name: PDF
          path: frontend.pdf

  commit-pdf:
    needs: build-pdf
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download PDF artifact
        uses: actions/download-artifact@v4
        with:
          name: PDF
          path: .

      - name: Commit PDF
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add -f frontend.pdf
          git commit -m "Update PDF" || echo "No changes to commit"
          git push

  create-release:
    needs: commit-pdf
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download PDF artifact
        uses: actions/download-artifact@v4
        with:
          name: PDF
          path: .

      - name: List files (for debugging)
        run: ls -la

      - name: Check if tag exists
        id: check_tag
        run: |
          if git ls-remote --tags origin refs/tags/v1.0.0 | grep -q 'v1.0.0'; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Delete existing release and tag
        if: steps.check_tag.outputs.exists == 'true'
        uses: dev-drprasad/delete-tag-and-release@v1.0
        with:
          tag_name: v1.0.0
          delete_release: true
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.0
          release_name: Release v1.0.0
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: frontend.pdf
          asset_name: frontend.pdf
          asset_content_type: application/pdf
